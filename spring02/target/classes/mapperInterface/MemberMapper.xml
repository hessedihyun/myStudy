<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapperInterface.MemberMapper">

<!-- ** Member  -->
<update id="memberInsert">
	update member 
	set jno=#{jno} where id=#{ii}
</update>
<!-- ** Check_List -->
<!-- ** age 기준 -->
<select id="aCheckList" resultType="com.ncs.spring02.domain.MemberDTO">
	
	select * from member
	<if test="check!=null">
		where  age >=
		<foreach collection="check" item="ait">
			#{ait}
		</foreach>
		and age
		<![CDATA[ <= ]]>
		<foreach collection="check" item="ait">
			#{ait}+9
		</foreach>
	</if>
	limit #{sno}, #{rowsPerPage}
	
</select>
<select id="aCheckRowsCount" resultType="int">
	
	select count(*) from member
	<if test="check!=null">
		where  age >=
		<foreach collection="check" item="ait">
			#{ait}
		</foreach>
		and age
		<![CDATA[ <= ]]>
		<foreach collection="check" item="ait">
			#{ait}+9
		</foreach>
	</if>
</select>

<!-- ** jno 기준 -->
<select id="mCheckList" resultType="com.ncs.spring02.domain.MemberDTO">
		select id, name, age, jno, info, point, birthday, rid, uploadfile
		from member
		<if test="check!=null">
			where jno in 
			<foreach collection="check" item="it" open="(" close=")" separator=",">
				#{it}
			</foreach>
		</if>
		limit #{sno}, #{rowsPerPage}
	</select>
	<select id="mCheckRowsCount" resultType="int">
		select count(*) from member
		<if test="check!=null">
			where jno in 
			<foreach collection="check" item="it" open="(" close=")" separator=",">
				#{it}
			</foreach>
		</if>
	</select>


<!-- ** Search_List -->
	<sql id="search">
		<!-- 조건값 1) CONCAT('%', #{keyword}, '%') 처리 -->
		<if test="keyword!=null">
			<bind name="keyval" value=" '%'+ keyword + '%' "/>
		</if>
		<!-- 2) Like 조건문 -->
			<choose>
				<when test="searchType=='all' and keyword!=null">
					AND ( id LIKE #{keyval}
							OR name LIKE #{keyval}
							OR info LIKE #{keyval}
							OR jno LIKE #{keyval}
							OR birthday LIKE #{keyval}
							OR rid LIKE #{keyval} ))
				</when>
				<when test="searchType!=null and keyword!=null">
				<!-- searchType이 컬럼명인 경우 -->
					AND ${searchType} LIKE #{keyval} )
				</when>
				<otherwise>)</otherwise>
			</choose>
	</sql>
	<select id="mSearchList" resultType="com.ncs.spring02.domain.MemberDTO">
		select * from member
		<!-- '!=null' 은 sql문에서 'is Not NULL'로 쓴다. -->
		where ( id is Not NULL <include refid="search"></include>
		limit #{sno}, #{rowsPerPage}
	</select>
	<select id="mSearchRowsCount" resultType="int">
		select count(*) from member
		where ( id is Not NULL <include refid="search"></include>
	</select>
	
<!-- ** Member Paging -->
	<select id="mPageList" resultType="com.ncs.spring02.domain.MemberDTO">
		select * from member
		limit #{sno}, #{rowsPerPage}
	</select>
	<select id="mTotalRowsCount" resultType="int">
		select count(*) from member
	</select>

<!-- ** selectList -->
	<select id="selectList" resultType="com.ncs.spring02.domain.MemberDTO">
		select * from member
	</select>
<!-- ** selectOne -->
	<select id="selectOne" resultType="com.ncs.spring02.domain.MemberDTO">
		select * from member where id=#{id}
	</select>
<!-- ** insert -->
	<insert id="insert">
		insert into member values(#{id},#{password},#{name}
		,#{age},#{jno},#{info},#{point},#{birthday},#{rid},#{uploadfile})
	</insert>
<!-- ** update -->
	<update id="update">
		update member set name=#{name}, age=#{age}, jno=#{jno}, info=#{info}
		, point=#{point}, birthday=#{birthday}, rid=#{rid}, uploadfile=#{uploadfile} where id=#{id}
	</update>
<!-- ** Password_Update : pwUpdate -->
	<update id="pwUpdate">
		update member set password=#{password} where id=#{id}
	</update>
<!-- ** delete -->
	<delete id="delete">
		delete from member where id=#{id}
	</delete>

</mapper>